\documentclass[11pt]{article}

% To compile this R knitr latex document, run the following commands in terminal:
%
% 1) nohup Rscript -e "library(knitr); knit('tau_cognitive_predictors.Rnw')" &
%    This will run the R code and generate the latex file tau_exploratory.tex.
%    All figures generated by the knitr chunks will be stored in the "figures" directory.
%    You can check the status of the R code by examining the output that is being redirected into nohup.out text file. (You can use "more" or "tail" commands to do this)
%    If you need to terminate the R code, you will need to know the ID of this process. This ID is displayed after you enter the nohup Rscript command. You can also find the ID
%    using the "top" command. You can terminate the R code in terminal with "kill ID" command.
%
% 2) pdflatex tau_exploratory
%    This will compile the latex code into tau_exploratory.pdf

\usepackage[top=.1in, left=.1in, right=.1in, bottom=.1in]{geometry}

\usepackage{times}

\usepackage{amsmath,amsfonts}
\usepackage{color}

\usepackage{caption}
\usepackage{subfig}

\usepackage{hyperref}
\hypersetup{bookmarks=false, colorlinks=true, plainpages=false}

\usepackage{booktabs}

\usepackage{pdflscape}

\usepackage{fullpage}
\pagenumbering{gobble} % turn off page numbering
\title{AV1451 tau PET retrospective cognitive performance}
\date{\today}

\begin{document}

\maketitle

<<Rlibs_opts, include=FALSE, cache=F>>=
library(readxl)
library(ppcor)
library(lattice)
library(ggplot2)
library(ggpmisc)
library(ggthemes)
library(ggExtra)
library(nlme)
library(dplyr)
library(corrplot)
library(ggbeeswarm)
library(doBy)
library(stargazer)
library(xtable)
library(tables)
library(multcomp)
# Multiple plot function
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)
  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)
  numPlots = length(plots)
  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                     ncol = cols, nrow = ceiling(numPlots/cols))
  }
  if (numPlots==1) {
    print(plots[[1]])
  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
      
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}

# some functions for table displays
roundmean <- function(x,n=2) {
  round(mean(x,na.rm=T),digits=n)
}

roundsd <- function(x,n=2) {
  round(sd(x,na.rm=T),digits=n)
}

roundmin <- function(x,n=2) {
  round(min(x,na.rm=T),digits=n)
}

roundmax <- function(x,n=2) {
  round(max(x,na.rm=T),digits=n)
}
# report generation
library(knitr)
opts_chunk$set(echo=F,
               fig.width=6, fig.height=6, fig.path=paste('figures',.Platform$file.sep,sep=""), fig.align='center', fig.pos='h!',
               out.width='1\\textwidth', fig.show='hold',
               dev=c('pdf','png'), dpi=300, warning=FALSE, message=FALSE, tidy=FALSE,
               cache=TRUE, autodep=TRUE)
options(width=60)
@
  
<<inputs>>=
# function to remove rows from data tables with na in specified column(s)
completeFun <- function(data, desiredCols) {
  completeVec <- complete.cases(data[, desiredCols])
  return(data[completeVec, ])
}
# function to read PET data
readpetdata <- function(fname) {
    # Read Excel file as a data.frame, skipping first row
    da <- as.data.frame(read_excel(fname, skip=1))
    
    # Make sure column names do not include spaces or special characters
    #  (any unallowed character will be replaced with . )
    colnames(da) <- make.names(colnames(da), unique=T)
    
    # Split idvi into blsaid and blsavi
    da$idvi <- sub("_P2_.*.nii.gz","",sub(".*BLSA_","",da$image.path))
    da$blsaid <- as.numeric(substr(da$idvi,1,4)) # first four characters are the participant ID
    da$blsavi <- as.numeric(substr(da$idvi,6,7)) + as.numeric(substr(da$idvi,9,9))/10 # remaining characters indicate visit number
    da # function returns the resulting data.frame
  }

# Ensure Windows-Mac compatibility
if (.Platform$OS.type=="unix") {
  rootname <- paste(.Platform$file.sep, "Volumes/NIAIRP2", sep="")
} else { # if Windows
  rootname <- paste("Q:", .Platform$file.sep, sep="")
}

cogpath <- file.path(rootname,'LBN','BABS','cogstore','cog1')
datapath <- file.path(cogpath,'home','jacob','tau_predictors','data')
@

<<data_tables>>=
# tau SUVR ROI means
tauda_fname <- file.path(datapath,'av1451','ROI_AV1451_pvc_SUVR.xlsx')
tauda <- readpetdata(tauda_fname)
tauda <- tauda[order(tauda$blsaid,tauda$blsavi),]
tauda$SFG <- with(tauda, (Right.SFG...superior.frontal.gyrus + Left.SFG...superior.frontal.gyrus)/2)
tauda$baseblsavi <- with(tauda, ave(blsavi, blsaid, FUN=function(x) x[1])) # blsavi corresponding to baseline visit
tauda$is.baseline <- tauda$blsavi==tauda$baseblsavi # Determine baseline visit (i.e., first AV1451 scan)
tauda <- tauda[tauda$is.baseline,] # only baseline data
# add extracted SUVR from conjunction map ROI
conjmaskda_fname <- file.path(cogpath,'home','jacob','tau_predictors','manuscript_freezedir','conjmask_suvr.csv')
conjmaskda <- as.data.frame(read.csv(conjmaskda_fname))
tauda <- merge(tauda, conjmaskda, by=c("blsaid","blsavi"), all.x=T)

# volume regional values
volume_spreadsheet_fname <- file.path(datapath,'mri_volume','BLSA_ROI-Volumes_SBIA_Aug2018_ICVadjusted_outlierRemoved.csv')
volumeda <- read.csv(volume_spreadsheet_fname)
# use volume measure from visit w/in 2 years of tau scan
volumeda$blsavi[(volumeda$blsaid==4987) & (volumeda$blsavi==4)] <- 5
volumeda$blsavi[(volumeda$blsaid==5600) & (volumeda$blsavi==16)] <- 15
volumeda$blsavi[(volumeda$blsaid==7874) & (volumeda$blsavi==3)] <- 4
volumeda$HCvol <- with(volumeda, X48ah + X47ah) # hippocampal volume
volumeda$GMvol <- volumeda$X601ah # total GM volume
volumeda$WBvol <- volumeda$X701ah # total brain volume
tauda <- merge(tauda, volumeda, by=c("blsaid","blsavi"), all.x=T)
tauda <- tauda[,c("blsaid","Braak.I.II","Braak.III.IV","Braak.V.VI","entorhinal","hippocampus","medial.occipital.GM","putamen","ventricles.and.CSF","inferior.temporal.gyrus","frontal.GM","SFG","conjmask_suvr","HCvol","GMvol","WBvol")]

#longitudinal cognitive data only CN
LME_spreadsheet_fname <- file.path(datapath, 'VoxelStatsLME_spreadsheet.csv')
cog_longda <- read.csv(LME_spreadsheet_fname)
cog_longda$racebin <- 1*(cog_longda$race=="Black")
cog_longda <- cog_longda[!(cog_longda$blsaid==1012),] # exclude outlier w/ high lateralized AV1451 SUVR
cog_longda <- cog_longda[!(cog_longda$blsaid==4854),] # exclude retrospectively-diagnosied MCI individuals
cog_longda <- merge(cog_longda, tauda, by=c("blsaid"))

# practice effects indicator variable
PEda_fname <- file.path(datapath,'cog','firstCVLT.xlsx')
PEda <- as.data.frame(read_excel(PEda_fname), skip=1)
PEda$blsaid <- PEda$`BLS Person ID`
PEda$blsavi <- PEda$`BLS Visit ID`
PEda <- PEda[c("blsaid","blsavi","firstcvlt")]
cog_longda <- merge(cog_longda, PEda, by=c("blsaid","blsavi"), all.x=T)
cog_longda$firstcvlt[is.na(cog_longda$firstcvlt)]=0
cog_longda$PE_indic <- cog_longda$firstcvlt*-1+1 # switch coding of practice effect indicator
#cog_longda <- cog_longda[!is.na(cog_longda$HCvol),] # remove observations w/o HCvol
# Baseline data
cog_longda$lastcvl <- with(cog_longda, ave(blsavi, blsaid, FUN=function(x) x[length(x)])==blsavi)
cog_baseda <- subset(cog_longda, lastcvl==T)
#count number of cognitive visits per individual
cog_baseda$cog_visits <- (cog_longda %>% distinct(blsaid,blsavi) %>% count(blsaid))$n
#compute duration of cognitive follow-up
cog_baseda$cogfollow <- cog_longda[!duplicated(cog_longda$blsaid),]$interval
@
\clearpage
<<centering_baseline>>=
# center independent variables for model interpretability
independent_vars <- c("AV1451age","sex","educ_years","PE_indic","HCvol","pibgroup","entorhinal","Braak.I.II","Braak.III.IV","Braak.V.VI","conjmask_suvr","HCvol","GMvol","WBvol","racebin")
for (var in independent_vars) {
  cog_longda[,paste0(var,"_c")] <- cog_longda[,var] - mean(cog_baseda[,var], na.rm=T)
}
for (var in independent_vars) {
  cog_baseda[,paste0(var,"_c")] <- cog_baseda[,var] - mean(cog_baseda[,var], na.rm=T)
}
@

\section{Sample characteristics}

\subsection{Continuous variables}

% h! option specifies that we want the table here. LaTeX will override its internal option specifications to make this happen.
\begin{table}[h!] 
\centering
\tiny
\caption{Sample characteristics for continuous variables.}
<<sample_characteristics_continuous, results='asis'>>=
tab <- tabular( (`Age at base AV1451 scan`=AV1451age) + 
                    (Education=educ_years) +
                    (`No. Cognitive Visits`=cog_visits) +
                    (`Duration of cognitive follow-up`=abs(cogfollow)) +
                    (`Braak I/II ROI tau SUVR`=Braak.I.II) +
                    (`Braak III/IV ROI tau SUVR`=Braak.III.IV) +
                    (`Braak V/VI ROI tau SUVR`=Braak.V.VI) ~
                    (1+Factor(pibgroup,"PiB group",
                              levelnames=c(paste("PiB-- (n=",sum(cog_baseda$pibgroup==0,na.rm=T),")",sep=""),
                                           paste("PiB+ (n=",sum(cog_baseda$pibgroup==1,na.rm=T),")",sep=""))))*(
                                             Paste(roundmean,roundsd,digits=2,head="Mean (SD)",sep=" (",postfix=")") +
                                               Paste(roundmin,roundmax,digits=2,head="Range",sep="--\\hspace{-.5em}")),
                  data=cog_baseda)
save <- booktabs()
latex(tab)
@

\end{table}
\begin{table}[h!]
\tiny
\centering
\caption{AV1451 group sample characteristics for categorical variables.}
<<pibgroup_categorical_characteristics,results='asis', echo=FALSE>>=
tab <- tabular(                 
  Factor(sex,"Sex",levelnames=c("Female","Male")) +
  Factor(race,"Race",levelnames=c("Black","Other Nonwhite", "White")) +
  Factor(apoe4,"APOE e4 status",levelnames=c("e4-","e4+")) +
  Factor(dx,"Diagnosis at last BLSA visit") ~ 
     (1+Factor(pibgroup,"PiB group",levelnames=c("PiB--","PiB+")))*(Paste(1,Percent("col"),digits=0,head="n (\\%)",sep=" (",postfix=")") ),
                   data=cog_baseda)
save <- booktabs( )
latex(tab)
@

\label{tab:sample-characteristics-categorical2}
\end{table}
\clearpage

\newgeometry{margin=0.1in}
<<cogage_spaghetti>>=
outcome_list <- c("Memory","Attention","ExecutiveFunction","Language","Visuospatial","DSSTotz","CVLtcaz","CVLfrlz","MMSTotz","PegMeanz")
timevar_list <- c("cog_age","interval")

timevar_plots <- list()

for (outcome in outcome_list) {
  for (timevar in timevar_list) {
    timevar_plots[[outcome]][[timevar]] <- ggplot(cog_longda, aes_string(x=timevar, y=outcome, group="blsaid")) +
                                              geom_point(aes(colour=as.factor(pibgroup)), size=2) +
                                              geom_line(aes(colour=as.factor(pibgroup), linetype=as.factor(sex)), size=1) +
                                              scale_color_manual(name="PiB group",
                                                                 values=c("#0072B2", "#D55E00"),
                                                                 labels=c("PiB-", "PiB+"),
                                                                 na.value="#999999") +
                                              scale_linetype_manual(name="sex",
                                                                    values=c("solid","dashed"),
                                                                    labels=c("female","male")) +
   	                                          xlab("Age at AV1451 scan") +
  	                                          ylab("CVLT long delay free recall (z-score)") +
                                              theme_minimal(base_size = 20) +
                                              theme(legend.position="bottom", aspect.ratio=0.5)
  }
}
timevar_plots$CVLfrlz$interval
@
\clearpage
<<lme_models>>=
fixef.formula <- substitute(paste0(outcome, " ~ AV1451age_c + sex_c + educ_years_c + pibgroup_c*interval +",roi,"_c*interval"))
#fixef.formula <- substitute(paste0(outcome, " ~ AV1451age_c + sex_c + educ_years_c + pibgroup_c*interval + HCvol_c*interval +",roi,"_c*interval"))
randef <- as.formula("~1+interval|blsaid")
lCtrl <- lmeControl(opt="optim",maxIter=100,msMaxIter=100,niterEM=50,msMaxEval=400)

fits <- list()
plots <- list()

roi_list <- c("entorhinal","Braak.I.II","Braak.III.IV","Braak.V.VI","conjmask_suvr")

for (outcome in outcome_list) {
  for (roi in roi_list) {
    fits[[outcome]][[roi]] <- lme(as.formula(eval(fixef.formula)),
                                  random=randef, 
                                  data=cog_longda,
                                  control=lCtrl,
                                  na.action = na.exclude)
    
    newdata <- expand.grid(interval=c(-10,0),
                           AV1451age_c=0,
                           sex_c=0,
                           educ_years_c=0,
                           pibgroup_c=0,#as.character(c(-0.254,0.745)),
                           HCvol_c=0,
                           roi_placeholder=c(unique(quantile(cog_baseda[,paste0(roi,"_c")], c(.1,.9)))),
                           roi.f=NA)
    colnames(newdata)[colnames(newdata)=="roi_placeholder"] <- paste0(roi,"_c")
    newdata$roi.f <- as.factor(newdata[,paste0(roi,"_c")])
    newdata[paste0(outcome,"_pred")] <- predict(fits[[outcome]][[roi]], newdata, level=0)
    
    cog_longda[paste0(roi,"_tertile")] <- as.character(ifelse(cog_longda[,roi] > quantile(cog_baseda[,roi])[4], 3, 
                                      ifelse(cog_longda[,roi] < quantile(cog_baseda[,roi])[2], 1, 2)))
    
      cog_longda[paste0(outcome,"_pred.ranef")] <- fits[[outcome]][[roi]]$fitted[,"blsaid"][match(rownames(cog_longda),names(fits[[outcome]][[roi]]$fitted[,"blsaid"]))]
    
    plots[[outcome]][[roi]] <- ggplot(newdata, aes_string(x="interval", y=paste0(outcome,"_pred"), color="roi.f")) +
                               scale_color_manual(name=paste0("population-level\n",roi,"\nAV1451 SUVR"), values=c("#0072B2", "#D55E00"), labels=c("bottom decile","top decile")) +
                               scale_linetype_manual(name="PiB group", values=c("dotted","solid"), labels=c("PiB-","PiB+")) +
                               geom_line(data=cog_longda, aes_string(x="interval", y=paste0(outcome,"_pred.ranef"), group="blsaid"), color="grey") +
                               #geom_line(size=1) +
                               xlab("Time prior to AV1451 scan (years)") +
                               #xlim(c(-25,0)) +
                               ylab("Memory (z-score)") +
                               theme_bw(base_size=16) + theme(aspect.ratio = 1)
  }
}
plots$CVLfrlz$entorhinal
@
\clearpage
<<results='asis'>>=
stargazer(fits$Memory$entorhinal, fits$Memory$Braak.III.IV, fits$Memory$Braak.V.VI, fits$Memory$conjmask_suvr,
          font.size="tiny",
          column.labels = c("Braak I","Braak III/IV","Braak V/VI","Conjunction map"),
          dep.var.labels = "Memory (z-score)",
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001))
@
\clearpage
<<results='asis'>>=
stargazer(fits$CVLtcaz$entorhinal, fits$CVLtcaz$Braak.III.IV, fits$CVLtcaz$Braak.V.VI, fits$CVLtcaz$conjmask_suvr,
          font.size="tiny",
          column.labels = c("Braak I","Braak III/IV","Braak V/VI","Conjunction map"),
          dep.var.labels = "CVLtca (z-score)",
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001))
@
\clearpage
<<results='asis'>>=
stargazer(fits$CVLfrlz$entorhinal, fits$CVLfrlz$Braak.III.IV, fits$CVLfrlz$Braak.V.VI,
          font.size="tiny",
          column.labels = c("entorhinal","Braak III/IV","Braak V/VI"),
          dep.var.labels = "CVLfrl (z-score)",
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001))
@
\clearpage
<<results='asis'>>=
stargazer(fits$Attention$entorhinal, fits$Attention$Braak.III.IV, fits$Attention$Braak.V.VI, fits$Attention$conjmask_suvr,
          font.size="tiny",
          column.labels = c("Braak I","Braak III/IV","Braak V/VI","Conjunction map"),
          dep.var.labels = "Attention (z-score)",
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001))
@
\clearpage
<<results='asis'>>=
stargazer(fits$ExecutiveFunction$entorhinal, fits$ExecutiveFunction$Braak.III.IV, fits$ExecutiveFunction$Braak.V.VI, fits$ExecutiveFunction$conjmask_suvr,
          font.size="tiny",
          column.labels = c("Braak I","Braak III/IV","Braak V/VI","Conjunction map"),
          dep.var.labels = "Executive Function (z-score)",
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001))
@
\clearpage
<<results='asis'>>=
stargazer(fits$Language$entorhinal, fits$Language$Braak.III.IV, fits$Language$Braak.V.VI, fits$Language$conjmask_suvr,
          font.size="tiny",
          column.labels = c("Braak I","Braak III/IV","Braak V/VI","Conjunction map"),
          dep.var.labels = "Language (z-score)",
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001))
@
\clearpage
<<results='asis'>>=
stargazer(fits$Visuospatial$entorhinal, fits$Visuospatial$Braak.III.IV, fits$Visuospatial$Braak.V.VI, fits$Visuospatial$conjmask_suvr,
          font.size="tiny",
          column.labels = c("Braak I","Braak III/IV","Braak V/VI","Conjunction map"),
          dep.var.labels = "Visuospatial (z-score)",
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001))
@
\clearpage
<<results='asis'>>=
stargazer(fits$Memory$entorhinal, fits$Attention$entorhinal, fits$ExecutiveFunction$entorhinal, fits$Language$entorhinal, fits$Visuospatial$entorhinal, fits$DSSTotz$entorhinal,
          font.size="small",
          column.labels = c(outcome_list[1:5],"Processing Speed"),
          dep.var.labels = "Cognitive testing performance (z-score)",
          covariate.labels = c("age","sex","education (years)","amyloid group","time","entorhinal SUVR","amyloid group x time","entorhinal SUVR x time"),
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001),
          out = "Q:/LBN/BABS/cogstore/cog1/home/jacob/tau_predictors/code/retrospective_memory/cogtable.htm")
@
\clearpage
<<results='asis'>>=
stargazer(fits$Memory$Braak.III.IV, fits$CVLtcaz$Braak.III.IV, fits$CVLfrlz$Braak.III.IV,
          font.size="small",
          column.labels = c("Memory","CVLT immediate","CVLT long delay"),
          dep.var.labels = "Cognitive testing performance (z-score)",
          covariate.labels = c("age","sex","education (years)","amyloid group","time","Braak III/IV SUVR","amyloid group x time","Braak III/IV SUVR x time"),
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001),
          out = "Q:/LBN/BABS/cogstore/cog1/home/jacob/tau_predictors/code/retrospective_memory/cogtable_2.htm")
@
\clearpage
<<mem_suvr_plots>>=
p1 <- ggplot(cog_baseda, aes(x=entorhinal, y=CVLfrlz)) +
        geom_point(aes(color=as.factor(pibgroup), shape=as.factor(sex)), size=1) +
        scale_colour_manual(name="pibgroup",
                          values=c("#0072B2", "#D55E00"),
                          labels=c("PiB-", "PiB+"),
                          na.value="#999999") +
        scale_shape_manual(name="sex", values=c(19,15), labels=c("female","male")) +
        geom_smooth(method = 'lm', aes(group = as.factor(pibgroup), colour=as.factor(pibgroup))) +
        xlab("Entorhinal SUVR") +
        ylab("CVLfrl z-score") +
        theme_minimal(base_size = 10) +
        theme(legend.position="none", aspect.ratio=1)
p2 <- ggplot(cog_baseda, aes(x=hippocampus, y=CVLfrlz)) +
        geom_point(aes(color=as.factor(pibgroup), shape=as.factor(sex)), size=1) +
        scale_colour_manual(name="pibgroup",
                          values=c("#0072B2", "#D55E00"),
                          labels=c("PiB-", "PiB+"),
                          na.value="#999999") +
        scale_shape_manual(name="sex", values=c(19,15), labels=c("female","male")) +
        geom_smooth(method = 'lm', aes(group = as.factor(pibgroup), colour=as.factor(pibgroup))) +
        xlab("Hippocampal SUVR") +
        ylab("CVLfrl z-score") +
        theme_minimal(base_size = 10) +
        theme(legend.position="none", aspect.ratio=1)
p3 <- ggplot(cog_baseda, aes(x=Braak.III.IV, y=CVLfrlz)) +
        geom_point(aes(color=as.factor(pibgroup), shape=as.factor(sex)), size=1) +
        scale_colour_manual(name="pibgroup",
                          values=c("#0072B2", "#D55E00"),
                          labels=c("PiB-", "PiB+"),
                          na.value="#999999") +
        scale_shape_manual(name="sex", values=c(19,15), labels=c("female","male")) +
        geom_smooth(method = 'lm', aes(group = as.factor(pibgroup), colour=as.factor(pibgroup))) +
        xlab("Braak III/IV SUVR") +
        ylab("CVLfrl") +
        theme_minimal(base_size = 10) +
        theme(legend.position="none", aspect.ratio=1)
p4 <- ggplot(cog_baseda, aes(x=Braak.V.VI, y=CVLfrlz)) +
        geom_point(aes(color=as.factor(pibgroup), shape=as.factor(sex)), size=1) +
        scale_colour_manual(name="pibgroup",
                          values=c("#0072B2", "#D55E00"),
                          labels=c("PiB-", "PiB+"),
                          na.value="#999999") +
        scale_shape_manual(name="sex", values=c(19,15), labels=c("female","male")) +
        geom_smooth(method = 'lm', aes(group = as.factor(pibgroup), colour=as.factor(pibgroup))) +
        xlab("Braak V/VI SUVR") +
        ylab("CVLfrl z-score") +
        theme_minimal(base_size = 10) +
        theme(legend.position="none", aspect.ratio=1)
p5 <- ggplot(cog_baseda, aes(x=AV1451age, y=entorhinal)) +
        geom_point(aes(color=as.factor(pibgroup)), size=3) +
        scale_colour_manual(name="Amyloid status",
                          values=c("#0072B2", "#D55E00"),
                          labels=c("PiB-", "PiB+"),
                          na.value="#999999") +
        geom_smooth(method = 'lm', aes(group = as.factor(pibgroup), colour=as.factor(pibgroup)), size = 2) +
        xlab("Age at AV1451 scan") +
        ylab("Entorhinal AV1451 SUVR") +
        theme(legend.position="right", aspect.ratio=1,
              axis.title = element_text(size=14),
              axis.text = element_text(size=12))
#multiplot(p1, p2, p3, p4, cols = 2)
p5
@
\clearpage
<<cartoon_plots>>=
agebypib_goodda <- data.frame("age"=c(50,50,90,90),
                              "suvr"=c(1.5, 1.52, 1.9, 1.55),
                              "pibgroup"=c('PiB+','PiB-','PiB+','PiB-'))
p1 <- ggplot(agebypib_goodda, aes(x=age, y=suvr)) +
        scale_colour_manual(name="PiB group",
                          values=c("#0072B2", "#D55E00"),
                          labels=c("PiB-", "PiB+"),
                          na.value="#999999") +
        geom_line(aes(colour=as.factor(pibgroup)), size = 0.75) +
        annotate("text", x=93, y=1.92, label="PiB+", color = "black", size=2) +
        annotate("text", x=93, y=1.56, label="PiB-", color = "black", size=2) +
        xlab("Age") +
        xlim(50,100) +
        ylab("AV1451 SUVR") +
        ylim(1.0,2.0) +
        theme_minimal(base_size = 10) +
        theme(legend.position="none", aspect.ratio=1)
agebypib_badda1 <- data.frame("age"=c(50,50,90,90),
                              "suvr"=c(1.5, 1.55, 1.45, 1.05),
                              "pibgroup"=c('PiB+','PiB-','PiB+','PiB-'))
p2 <- ggplot(agebypib_badda1, aes(x=age, y=suvr)) +
        scale_colour_manual(name="PiB group",
                          values=c("#0072B2", "#D55E00"),
                          labels=c("PiB-", "PiB+"),
                          na.value="#999999") +
        geom_line(aes(colour=as.factor(pibgroup)), size = 0.75) +
        annotate("text", x=93, y=1.45, label="PiB+", color = "black", size=2) +
        annotate("text", x=93, y=1.05, label="PiB-", color = "black", size=2) +
        xlab("Age") +
        xlim(50,100) +
        ylab("AV1451 SUVR") +
        ylim(1.0,2.0) +
        theme_minimal(base_size = 10) +
        theme(legend.position="none", aspect.ratio=1)
agebypib_badda2 <- data.frame("age"=c(50,50,90,90),
                              "suvr"=c(1.15, 1.55, 1.6, 1.57),
                              "pibgroup"=c('PiB+','PiB-','PiB+','PiB-'))
p3 <- ggplot(agebypib_badda2, aes(x=age, y=suvr)) +
        scale_colour_manual(name="PiB group",
                          values=c("#0072B2", "#D55E00"),
                          labels=c("PiB-", "PiB+"),
                          na.value="#999999") +
        geom_line(aes(colour=as.factor(pibgroup)), size = 0.75) +
        annotate("text", x=93, y=1.62, label="PiB+", color = "black", size=2) +
        annotate("text", x=93, y=1.56, label="PiB-", color = "black", size=2) +
        xlab("Age") +
        xlim(50,100) +
        ylab("AV1451 SUVR") +
        ylim(1.0,2.0) +
        theme_minimal(base_size = 10) +
        theme(legend.position="none", aspect.ratio=1)
#multiplot(p1, p2, p3, cols = 1)
@
\clearpage
<<memory_change_plot>>=
newdata_1 <- data.frame(blsaid=cog_baseda$blsaid,
            interval=rep(0,nrow(cog_baseda)),
            AV1451age_c=cog_baseda$AV1451age_c,
            sex_c=cog_baseda$sex_c,
            educ_years_c=cog_baseda$educ_years_c,
            pibgroup_c=cog_baseda$pibgroup_c,
            Braak.III.IV_c=cog_baseda$Braak.III.IV_c)

newdata_2 <- data.frame(blsaid=cog_baseda$blsaid,
            interval=rep(1,nrow(cog_baseda)),
            AV1451age_c=cog_baseda$AV1451age_c,
            sex_c=cog_baseda$sex_c,
            educ_years_c=cog_baseda$educ_years_c,
            pibgroup_c=cog_baseda$pibgroup_c,
            Braak.III.IV_c=cog_baseda$Braak.III.IV_c)

model <- lme(CVLfrlz ~ AV1451age_c + sex_c + educ_years_c + pibgroup_c*interval + Braak.III.IV_c*interval, 
             random=~1+interval|blsaid, 
             data=cog_longda,
             control=lCtrl,
             na.action = na.exclude)

newdata_1$Memory_pred <- predict(model, newdata_1)
newdata_2$Memory_pred <- predict(model, newdata_2)
cog_baseda$Memory_change <- newdata_2$Memory_pred - newdata_1$Memory_pred
p1 <- ggplot(cog_baseda, aes(x=Braak.III.IV, y=Memory_change)) +
      geom_point(size=3, color = "#000000") +
      geom_smooth(method='lm', color="#000000", size = 2) +
      xlab("Braak.III.IV AV1451 SUVR") +
      ylab("Memory rate of change (z-score/year)") +
      #ylab("") +
      theme_bw(base_size=16)
p1
@
\clearpage
<<predictors_regional_validation, results='asis'>>=
regional_rois <- c("medial.occipital.GM","putamen","ventricles.and.CSF","inferior.temporal.gyrus","frontal.GM","SFG")
regional.lm.formula <- substitute(paste0(roi, " ~ AV1451age_c*pibgroup_c + sex_c + racebin_c"))
reg_fits <- list()

for (roi in regional_rois) {
  reg_fits[[roi]] <- lm(as.formula(eval(regional.lm.formula)), 
                                  data=cog_baseda,
                                  na.action = na.exclude)
}

for (model in reg_fits) {
  K <- matrix(c(0,1,0,0,0,1) ,1)
  lm.agepibpos <- glht(model, linfct = K)
  summary(model)$coefficients[2,] <- summary(lm.agepibpos)
}

stargazer(reg_fits$medial.occipital.GM, reg_fits$putamen, reg_fits$ventricles.and.CSF, reg_fits$inferior.temporal.gyrus, reg_fits$frontal.GM, reg_fits$SFG,
          font.size="small",
          column.labels = c("Medial Occipital GM","Putamen","Ventricles and CSF","ITG","Frontal GM","SFG"),
          dep.var.labels = "ROI",
          covariate.labels = c("age","amyloid group","sex","race","age x amyloid group"),
          report="vc*sp", 
          star.cutoffs=c(0.05,0.01,0.001),
          out = "Q:/LBN/BABS/cogstore/cog1/home/jacob/tau_predictors/code/retrospective_memory/regpred_table.htm")
@

\end{document}